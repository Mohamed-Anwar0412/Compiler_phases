parser Stack                     input Stack                                              Action
-------------------------------  -------------------------------------------------------  ---------------------------------------
$ S                              $ if ( x > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }  Predict: S --> if ( cond ) { stat } T
$ if ( cond ) { stat } T         $ if ( x > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }  Match: if
$ ( cond ) { stat } T            $ ( x > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }     Match: (
$ cond ) { stat } T              $ x > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }       Predict: cond --> id cop id Cd
$ id cop id Cd ) { stat } T      $ x > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }       Predict: id --> letter
$ letter cop id Cd ) { stat } T  $ x > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }       Predict: letter --> x
$ x cop id Cd ) { stat } T       $ x > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }       Match: x
$ cop id Cd ) { stat } T         $ > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }         Predict: cop --> >
$ > id Cd ) { stat } T           $ > y ) { y = 0 ; x = x + 1 ; } else { x = y ; }         Match: >
$ id Cd ) { stat } T             $ y ) { y = 0 ; x = x + 1 ; } else { x = y ; }           Predict: id --> letter
$ letter Cd ) { stat } T         $ y ) { y = 0 ; x = x + 1 ; } else { x = y ; }           Predict: letter --> y
$ y Cd ) { stat } T              $ y ) { y = 0 ; x = x + 1 ; } else { x = y ; }           Match: y
$ Cd ) { stat } T                $ ) { y = 0 ; x = x + 1 ; } else { x = y ; }             Predict: Cd --> λ
$ ) { stat } T                   $ ) { y = 0 ; x = x + 1 ; } else { x = y ; }             Match: )
$ { stat } T                     $ { y = 0 ; x = x + 1 ; } else { x = y ; }               Match: {
$ stat } T                       $ y = 0 ; x = x + 1 ; } else { x = y ; }                 Predict: stat --> letter = calc ; statD
$ letter = calc ; statD } T      $ y = 0 ; x = x + 1 ; } else { x = y ; }                 Predict: letter --> y
$ y = calc ; statD } T           $ y = 0 ; x = x + 1 ; } else { x = y ; }                 Match: y
$ = calc ; statD } T             $ = 0 ; x = x + 1 ; } else { x = y ; }                   Match: =
$ calc ; statD } T               $ 0 ; x = x + 1 ; } else { x = y ; }                     Predict: calc --> id D
$ id D ; statD } T               $ 0 ; x = x + 1 ; } else { x = y ; }                     Predict: id --> digit
$ digit D ; statD } T            $ 0 ; x = x + 1 ; } else { x = y ; }                     Predict: digit --> 0
$ 0 D ; statD } T                $ 0 ; x = x + 1 ; } else { x = y ; }                     Match: 0
$ D ; statD } T                  $ ; x = x + 1 ; } else { x = y ; }                       Predict: D --> calcD
$ calcD ; statD } T              $ ; x = x + 1 ; } else { x = y ; }                       Predict: calcD --> λ
$ ; statD } T                    $ ; x = x + 1 ; } else { x = y ; }                       Match: ;
$ statD } T                      $ x = x + 1 ; } else { x = y ; }                         Predict: statD --> stat
$ stat } T                       $ x = x + 1 ; } else { x = y ; }                         Predict: stat --> letter = calc ; statD
$ letter = calc ; statD } T      $ x = x + 1 ; } else { x = y ; }                         Predict: letter --> x
$ x = calc ; statD } T           $ x = x + 1 ; } else { x = y ; }                         Match: x
$ = calc ; statD } T             $ = x + 1 ; } else { x = y ; }                           Match: =
$ calc ; statD } T               $ x + 1 ; } else { x = y ; }                             Predict: calc --> id D
$ id D ; statD } T               $ x + 1 ; } else { x = y ; }                             Predict: id --> letter
$ letter D ; statD } T           $ x + 1 ; } else { x = y ; }                             Predict: letter --> x
$ x D ; statD } T                $ x + 1 ; } else { x = y ; }                             Match: x
$ D ; statD } T                  $ + 1 ; } else { x = y ; }                               Predict: D --> opH id calcD
$ opH id calcD ; statD } T       $ + 1 ; } else { x = y ; }                               Predict: opH --> +
$ + id calcD ; statD } T         $ + 1 ; } else { x = y ; }                               Match: +
$ id calcD ; statD } T           $ 1 ; } else { x = y ; }                                 Predict: id --> digit
$ digit calcD ; statD } T        $ 1 ; } else { x = y ; }                                 Predict: digit --> 1
$ 1 calcD ; statD } T            $ 1 ; } else { x = y ; }                                 Match: 1
$ calcD ; statD } T              $ ; } else { x = y ; }                                   Predict: calcD --> λ
$ ; statD } T                    $ ; } else { x = y ; }                                   Match: ;
$ statD } T                      $ } else { x = y ; }                                     Predict: statD --> λ
$ } T                            $ } else { x = y ; }                                     Match: }
$ T                              $ else { x = y ; }                                       Predict: T --> else { stat }
$ else { stat }                  $ else { x = y ; }                                       Match: else
$ { stat }                       $ { x = y ; }                                            Match: {
$ stat }                         $ x = y ; }                                              Predict: stat --> letter = calc ; statD
$ letter = calc ; statD }        $ x = y ; }                                              Predict: letter --> x
$ x = calc ; statD }             $ x = y ; }                                              Match: x
$ = calc ; statD }               $ = y ; }                                                Match: =
$ calc ; statD }                 $ y ; }                                                  Predict: calc --> id D
$ id D ; statD }                 $ y ; }                                                  Predict: id --> letter
$ letter D ; statD }             $ y ; }                                                  Predict: letter --> y
$ y D ; statD }                  $ y ; }                                                  Match: y
$ D ; statD }                    $ ; }                                                    Predict: D --> calcD
$ calcD ; statD }                $ ; }                                                    Predict: calcD --> λ
$ ; statD }                      $ ; }                                                    Match: ;
$ statD }                        $ }                                                      Predict: statD --> λ
$ }                              $ }                                                      Match: }
$                                $                                                        Accept!!