Parser Stack                     Input Stack                                                                                                                        Action
-------------------------------  ---------------------------------------------------------------------------------------------------------------------------------  ----------------------------------------
$ S                              $ if ( x >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }  Predict: S --> if ( cond ) { stat } T
$ if ( cond ) { stat } T         $ if ( x >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }  Match: if
$ ( cond ) { stat } T            $ ( x >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }     Match: (
$ cond ) { stat } T              $ x >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }       Predict: cond --> id cop id Cd
$ id cop id Cd ) { stat } T      $ x >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }       Predict: id --> ['letter', 'digit']
$ letter cop id Cd ) { stat } T  $ x >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }       Predict: letter --> x
$ x cop id Cd ) { stat } T       $ x >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }       Match: x
$ cop id Cd ) { stat } T         $ >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }         Predict: cop --> >=
$ >= id Cd ) { stat } T          $ >= y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }         Match: >=
$ id Cd ) { stat } T             $ y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }            Predict: id --> ['letter', 'digit']
$ letter Cd ) { stat } T         $ y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }            Predict: letter --> y
$ y Cd ) { stat } T              $ y ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }            Match: y
$ Cd ) { stat } T                $ ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }              Predict: Cd --> Î»
$ ) { stat } T                   $ ) { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }              Match: )
$ { stat } T                     $ { y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                Match: {
$ stat } T                       $ y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                  Predict: stat --> letter = calc ; statD
$ letter = calc ; statD } T      $ y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                  Predict: letter --> y
$ y = calc ; statD } T           $ y = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                  Match: y
$ = calc ; statD } T             $ = 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                    Match: =
$ calc ; statD } T               $ 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                      Predict: calc --> id D
$ id D ; statD } T               $ 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                      Predict: id --> ['letter', 'digit']
$ digit D ; statD } T            $ 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                      Predict: digit --> 10
$ 10 D ; statD } T               $ 10 ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                      Match: 10
$ D ; statD } T                  $ ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                         Predict: D --> ['opH id calcD', 'calcD']
$ calcD ; statD } T              $ ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                         Predict: calcD --> Î»
$ ; statD } T                    $ ; x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                         Match: ;
$ statD } T                      $ x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                           Predict: statD --> ['stat', '']
$ stat } T                       $ x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                           Predict: stat --> letter = calc ; statD
$ letter = calc ; statD } T      $ x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                           Predict: letter --> x
$ x = calc ; statD } T           $ x = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                           Match: x
$ = calc ; statD } T             $ = - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                             Match: =
$ calc ; statD } T               $ - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                               Predict: calc --> id D
$ id D ; statD } T               $ - x + 1 ; c = 3 ; a = b + c ; d += 5 + g ; & x ; * x ; ! x : - x ; x ++: u -- ; } else { x = y ; }                               Reject!!